(function(){const pages=[{"idx":0,"href":"/docs/api/","title":"API Reference","content":" API Reference "},{"idx":1,"href":"/docs/","title":"Docs","content":""},{"idx":2,"href":"/docs/get-started/","title":"Get started","content":" Get started 1. Create your account Before start using the Compayer, sign up and create a user account.\n2. Set up data preferences Configure your preferences to process analytics data in real-time:\n Time zone Default currency Date format      You can always change settings later in Profile Settings.\n3. Import data to Compayer To get started with analytics reports, you need to set up a client to import transactions data to our data house.\nWe support data from payment services: Xsolla, Yandex.Money and PaySuper.\nPlease let us know if you need other payment systems, and we will add it asap.\n You can use several ways to import data:\n Set up the Compayer SDK integration\nIntegrate our SDK to your site or platform to send data from your backend or frontend system.\n Import your logs or database\nWe could import any data you have from log text files in any format or directly from your database.\nContact Technical Team   Next steps Set up Compayer  Questions? Sales Our salespeople are pleasant and friendly. Leave your contact details, and we\u0026rsquo;ll be back to you in no time.  Support We are always happy to help with a code, improve a guide or consider a feature.  GitHub Compayer Libraries are designed to push stat messages to Compayer.   Not a developer? Our engineers will help you integrate Compayer into your existing e-commerce platform, a website or a game in the best possible way. If you want something very special and crazy custom yet don\u0026rsquo;t have a suitable programmer available nearby - talk to us! We won\u0026rsquo;t let down a Compayer user. We will try to help you in every possible way. We can even hire a programmer for you! "},{"idx":3,"href":"/docs/integration/","title":"Integration","content":" Set up Compayer To start collecting data from your client:\nStep 1. Create or sign in to your Compayer account to get:\n CLIENT_ID (the unique identifier for your client) SECRET_KEY (the secret API key for your client)  Step 2. Follow the instruction to send events from your client to Compayer:\nCompayer PHP SDK library is designed to push stat messages to the Compayer analytics from the php-based projects.\nCreate and configure a configuration object with your CLIENT_ID and SECRET_KEY:\n$config = new Config(CLIENT_ID, SECRET_KEY); $client = new Client($config); Create an instance of the Event class and set properties about a user and payment:\nAll fields are optional, but it\u0026rsquo;s important to fill out one of the fields: userEmails, userPhones or userAccounts to identify the user made the payment.\nYou can set custom properties about a user or payment using setExtra(['my_property' =\u0026gt; 'value']).\n$event = (new Event()) -\u0026gt;setMerchantTransactionId('12345') -\u0026gt;setExtra(['my_property' =\u0026gt; 'value']);  Send the generated Event and get the response message with a transaction identifier and log:\n$response = $client-\u0026gt;pushStartEvent($event);  Sample code to send the Event start:\nuse Compayer\\SDK\\Client; use Compayer\\SDK\\Config; use Compayer\\SDK\\Event; use Compayer\\SDK\\Exceptions\\SdkException; const CLIENT_ID = \u0026#39;client_id\u0026#39;; const SECRET_KEY = \u0026#39;secret_key\u0026#39;; $config = new Config(CLIENT_ID, SECRET_KEY); // Enable debug mode. $config-\u0026gt;setDebugMode(true); $client = new Client($config); $event = (new Event()) -\u0026gt;setMerchantTransactionId(\u0026#39;12345\u0026#39;) -\u0026gt;setPaymentAmount(250.50) -\u0026gt;setPaymentCurrency(\u0026#39;RUB\u0026#39;) -\u0026gt;setUserLang(\u0026#39;RUS\u0026#39;) -\u0026gt;setUserEmails([\u0026#39;customer@compayer.com\u0026#39;]) -\u0026gt;setUserAccounts([\u0026#39;54321\u0026#39;]) -\u0026gt;setExtra([\u0026#39;my_property\u0026#39; =\u0026gt; \u0026#39;value\u0026#39;]); try { $response = $client-\u0026gt;pushStartEvent($event); } catch (SdkException $e) { print_r($e-\u0026gt;getMessage()); } // Use this sample code to send \u0026#34;success\u0026#34;, \u0026#34;fail\u0026#34; or \u0026#34;refund\u0026#34; events and to chain events. // The transaction identifier is UUID string like 3677eb06-1a9a-4b6c-9d6a-1799cae1b6bb. $transactionId = $response-\u0026gt;getTransactionId(); // Show logs with the debug mode configuration. print_r($response-\u0026gt;getLog()); Questions? Sales Our salespeople are pleasant and friendly. Leave your contact details, and we\u0026rsquo;ll be back to you in no time.  Support We are always happy to help with a code, improve a guide or consider a feature.  GitHub Compayer Libraries are designed to push stat messages to Compayer.   Not a developer? Our engineers will help you integrate Compayer into your existing e-commerce platform, a website or a game in the best possible way. If you want something very special and crazy custom yet don\u0026rsquo;t have a suitable programmer available nearby - talk to us! We won\u0026rsquo;t let down a Compayer user. We will try to help you in every possible way. We can even hire a programmer for you! "},{"idx":4,"href":"/","title":"Overview","content":" Overview Compayer is an analytics service that tracks customer events in payment forms for financial and marketing reports.\nTry out Compayer Portal and explore real datasets.\nEXPLORE NOW      Features\n Tracking e-commerce payment events about started, successful, failure or refunded transactions. Visualise your entire business on a single screen in real-time.  Next steps Get started with Compayer  Questions? Sales Our salespeople are pleasant and friendly. Leave your contact details, and we\u0026rsquo;ll be back to you in no time.  Support We are always happy to help with a code, improve a guide or consider a feature.  GitHub Compayer Libraries are designed to push stat messages to Compayer.   Not a developer? Our engineers will help you integrate Compayer into your existing e-commerce platform, a website or a game in the best possible way. If you want something very special and crazy custom yet don\u0026rsquo;t have a suitable programmer available nearby - talk to us! We won\u0026rsquo;t let down a Compayer user. We will try to help you in every possible way. We can even hire a programmer for you! "}];window.bookSearch={pages:pages,idx:lunr(function(){this.ref("idx");this.field("title");this.field("content");pages.forEach(this.add,this);}),}})();